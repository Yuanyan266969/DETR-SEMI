{"env_info": "sys.platform: linux\nPython: 3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]\nCUDA available: True\nGPU 0,1: NVIDIA GeForce RTX 3080\nCUDA_HOME: /usr/local/cuda\nNVCC: Build cuda_12.3.r12.3/compiler.33567101_0\nGCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0\nPyTorch: 1.9.0+cu111\nPyTorch compiling details: PyTorch built with:\n  - GCC 7.3\n  - C++ Version: 201402\n  - Intel(R) Math Kernel Library Version 2020.0.0 Product Build 20191122 for Intel(R) 64 architecture applications\n  - Intel(R) MKL-DNN v2.1.2 (Git Hash 98be7e8afa711dc9b66c8ff3504129cb82013cdb)\n  - OpenMP 201511 (a.k.a. OpenMP 4.5)\n  - NNPACK is enabled\n  - CPU capability usage: AVX2\n  - CUDA Runtime 11.1\n  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86\n  - CuDNN 8.0.5\n  - Magma 2.5.2\n  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.1, CUDNN_VERSION=8.0.5, CXX_COMPILER=/opt/rh/devtoolset-7/root/usr/bin/c++, CXX_FLAGS= -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.9.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, \n\nTorchVision: 0.10.0+cu111\nOpenCV: 4.10.0\nMMCV: 1.3.16\nMMCV Compiler: GCC 7.3\nMMCV CUDA Compiler: 11.1\nMMDetection: 2.16.0+972db32", "config": "dataset_type = 'CocoDataset'\ndata_root = '/root/paddlejob/workspace/env_run/output/temp/data/coco/'\nimg_norm_cfg = dict(\n    mean=[123.675, 116.28, 103.53], std=[58.395, 57.12, 57.375], to_rgb=True)\ntrain_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='Sequential',\n        transforms=[\n            dict(\n                type='RandResize',\n                img_scale=[(480, 1333), (512, 1333), (544, 1333), (576, 1333),\n                           (608, 1333), (640, 1333), (672, 1333), (704, 1333),\n                           (736, 1333), (768, 1333), (800, 1333)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandFlip', flip_ratio=0.5),\n            dict(\n                type='OneOf',\n                transforms=[\n                    dict(type='Identity'),\n                    dict(type='AutoContrast'),\n                    dict(type='RandEqualize'),\n                    dict(type='RandSolarize'),\n                    dict(type='RandColor'),\n                    dict(type='RandContrast'),\n                    dict(type='RandBrightness'),\n                    dict(type='RandSharpness'),\n                    dict(type='RandPosterize')\n                ])\n        ],\n        record=True),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=1),\n    dict(type='ExtraAttrs', tag='sup'),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_bboxes', 'gt_labels'],\n        meta_keys=('filename', 'ori_shape', 'img_shape', 'img_norm_cfg',\n                   'pad_shape', 'scale_factor', 'tag'))\n]\ntest_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(\n        type='MultiScaleFlipAug',\n        img_scale=(1333, 800),\n        flip=False,\n        transforms=[\n            dict(type='Resize', keep_ratio=True),\n            dict(type='RandomFlip'),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=1),\n            dict(type='ImageToTensor', keys=['img']),\n            dict(type='Collect', keys=['img'])\n        ])\n]\ndata = dict(\n    samples_per_gpu=5,\n    workers_per_gpu=5,\n    train=dict(\n        type='SemiDataset',\n        sup=dict(\n            type='CocoDataset',\n            ann_file=\n            'Split/coco_dataset_10/annotations/instances_train2017_10.json',\n            img_prefix='Split/coco_dataset_10/train2017_10/',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(\n                    type='Sequential',\n                    transforms=[\n                        dict(\n                            type='RandResize',\n                            img_scale=[(480, 1333), (512, 1333), (544, 1333),\n                                       (576, 1333), (608, 1333), (640, 1333),\n                                       (672, 1333), (704, 1333), (736, 1333),\n                                       (768, 1333), (800, 1333)],\n                            multiscale_mode='value',\n                            keep_ratio=True),\n                        dict(type='RandFlip', flip_ratio=0.5),\n                        dict(\n                            type='OneOf',\n                            transforms=[\n                                dict(type='Identity'),\n                                dict(type='AutoContrast'),\n                                dict(type='RandEqualize'),\n                                dict(type='RandSolarize'),\n                                dict(type='RandColor'),\n                                dict(type='RandContrast'),\n                                dict(type='RandBrightness'),\n                                dict(type='RandSharpness'),\n                                dict(type='RandPosterize')\n                            ])\n                    ],\n                    record=True),\n                dict(\n                    type='Normalize',\n                    mean=[123.675, 116.28, 103.53],\n                    std=[58.395, 57.12, 57.375],\n                    to_rgb=True),\n                dict(type='Pad', size_divisor=1),\n                dict(type='ExtraAttrs', tag='sup'),\n                dict(type='DefaultFormatBundle'),\n                dict(\n                    type='Collect',\n                    keys=['img', 'gt_bboxes', 'gt_labels'],\n                    meta_keys=('filename', 'ori_shape', 'img_shape',\n                               'img_norm_cfg', 'pad_shape', 'scale_factor',\n                               'tag'))\n            ]),\n        unsup=dict(\n            type='CocoDataset',\n            ann_file='coco_data/annotations/annotations_modified.json',\n            img_prefix='Semi-DETR/coco_data/images/',\n            pipeline=[\n                dict(type='LoadImageFromFile'),\n                dict(type='LoadAnnotations', with_bbox=True),\n                dict(\n                    type='MultiBranch',\n                    unsup_student=[\n                        dict(\n                            type='Sequential',\n                            transforms=[\n                                dict(\n                                    type='RandResize',\n                                    img_scale=[(480, 1333), (512, 1333),\n                                               (544, 1333), (576, 1333),\n                                               (608, 1333), (640, 1333),\n                                               (672, 1333), (704, 1333),\n                                               (736, 1333), (768, 1333),\n                                               (800, 1333)],\n                                    multiscale_mode='value',\n                                    keep_ratio=True),\n                                dict(type='RandFlip', flip_ratio=0.5),\n                                dict(\n                                    type='ShuffledSequential',\n                                    transforms=[\n                                        dict(\n                                            type='OneOf',\n                                            transforms=[\n                                                dict(type='Identity'),\n                                                dict(type='AutoContrast'),\n                                                dict(type='RandEqualize'),\n                                                dict(type='RandSolarize'),\n                                                dict(type='RandColor'),\n                                                dict(type='RandContrast'),\n                                                dict(type='RandBrightness'),\n                                                dict(type='RandSharpness'),\n                                                dict(type='RandPosterize')\n                                            ]),\n                                        dict(\n                                            type='OneOf',\n                                            transforms=[{\n                                                'type': 'RandTranslate',\n                                                'x': (-0.1, 0.1)\n                                            }, {\n                                                'type': 'RandTranslate',\n                                                'y': (-0.1, 0.1)\n                                            }, {\n                                                'type': 'RandRotate',\n                                                'angle': (-30, 30)\n                                            },\n                                                        [{\n                                                            'type':\n                                                            'RandShear',\n                                                            'x': (-30, 30)\n                                                        }, {\n                                                            'type':\n                                                            'RandShear',\n                                                            'y': (-30, 30)\n                                                        }]])\n                                    ]),\n                                dict(\n                                    type='RandErase',\n                                    n_iterations=(1, 5),\n                                    size=[0, 0.2],\n                                    squared=True)\n                            ],\n                            record=True),\n                        dict(\n                            type='Normalize',\n                            mean=[123.675, 116.28, 103.53],\n                            std=[58.395, 57.12, 57.375],\n                            to_rgb=True),\n                        dict(type='Pad', size_divisor=1),\n                        dict(type='ExtraAttrs', tag='unsup_student'),\n                        dict(type='DefaultFormatBundle'),\n                        dict(\n                            type='Collect',\n                            keys=['img', 'gt_bboxes', 'gt_labels'],\n                            meta_keys=('filename', 'ori_shape', 'img_shape',\n                                       'img_norm_cfg', 'pad_shape',\n                                       'scale_factor', 'tag',\n                                       'transform_matrix'))\n                    ],\n                    unsup_teacher=[\n                        dict(\n                            type='Sequential',\n                            transforms=[\n                                dict(\n                                    type='RandResize',\n                                    img_scale=[(480, 1333), (512, 1333),\n                                               (544, 1333), (576, 1333),\n                                               (608, 1333), (640, 1333),\n                                               (672, 1333), (704, 1333),\n                                               (736, 1333), (768, 1333),\n                                               (800, 1333)],\n                                    multiscale_mode='value',\n                                    keep_ratio=True),\n                                dict(type='RandFlip', flip_ratio=0.5)\n                            ],\n                            record=True),\n                        dict(\n                            type='Normalize',\n                            mean=[123.675, 116.28, 103.53],\n                            std=[58.395, 57.12, 57.375],\n                            to_rgb=True),\n                        dict(type='Pad', size_divisor=1),\n                        dict(type='ExtraAttrs', tag='unsup_teacher'),\n                        dict(type='DefaultFormatBundle'),\n                        dict(\n                            type='Collect',\n                            keys=['img', 'gt_bboxes', 'gt_labels'],\n                            meta_keys=('filename', 'ori_shape', 'img_shape',\n                                       'img_norm_cfg', 'pad_shape',\n                                       'scale_factor', 'tag',\n                                       'transform_matrix'))\n                    ])\n            ],\n            filter_empty_gt=False)),\n    val=dict(\n        type='CocoDataset',\n        ann_file=\n        '/root/paddlejob/workspace/env_run/output/temp/data/coco/annotations/instances_val2017.json',\n        img_prefix=\n        '/root/paddlejob/workspace/env_run/output/temp/data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=1),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    test=dict(\n        type='CocoDataset',\n        ann_file=\n        '/root/paddlejob/workspace/env_run/output/temp/data/coco/annotations/instances_val2017.json',\n        img_prefix=\n        '/root/paddlejob/workspace/env_run/output/temp/data/coco/val2017/',\n        pipeline=[\n            dict(type='LoadImageFromFile'),\n            dict(\n                type='MultiScaleFlipAug',\n                img_scale=(1333, 800),\n                flip=False,\n                transforms=[\n                    dict(type='Resize', keep_ratio=True),\n                    dict(type='RandomFlip'),\n                    dict(\n                        type='Normalize',\n                        mean=[123.675, 116.28, 103.53],\n                        std=[58.395, 57.12, 57.375],\n                        to_rgb=True),\n                    dict(type='Pad', size_divisor=1),\n                    dict(type='ImageToTensor', keys=['img']),\n                    dict(type='Collect', keys=['img'])\n                ])\n        ]),\n    sampler=dict(\n        train=dict(\n            type='SemiBalanceSampler',\n            sample_ratio=[1, 4],\n            by_prob=True,\n            epoch_length=7330)))\nevaluation = dict(interval=4000, metric='bbox', type='SubModulesDistEvalHook')\ncheckpoint_config = dict(\n    interval=4000, create_symlink=False, max_keep_ckpts=5, by_epoch=False)\nlog_config = dict(\n    interval=50,\n    hooks=[dict(type='TextLoggerHook'),\n           dict(type='TensorboardLoggerHook')])\ncustom_hooks = [\n    dict(type='NumClassCheckHook'),\n    dict(type='MeanTeacher', momentum=0.999, interval=1, warm_up=0),\n    dict(type='StepRecord', normalize=False)\n]\ndist_params = dict(backend='nccl')\nlog_level = 'INFO'\nload_from = None\nresume_from = None\nworkflow = [('train', 1)]\nmmdet_base = '../../thirdparty/mmdetection/configs/_base_'\nmodel = dict(\n    type='DinoDetrSSOD',\n    model=dict(\n        type='DINODETR',\n        backbone=dict(\n            type='ResNet',\n            depth=50,\n            num_stages=4,\n            out_indices=(1, 2, 3),\n            frozen_stages=1,\n            norm_cfg=dict(type='BN', requires_grad=False),\n            norm_eval=True,\n            style='pytorch',\n            init_cfg=dict(\n                type='Pretrained', checkpoint='torchvision://resnet50')),\n        bbox_head=dict(\n            type='DINODETRSSODHead',\n            num_query=900,\n            query_dim=4,\n            random_refpoints_xy=False,\n            bbox_embed_diff_each_layer=False,\n            num_classes=6,\n            in_channels=2048,\n            transformer=dict(type='DINOTransformer'),\n            positional_encoding=dict(\n                type='SinePositionalEncodingHW',\n                temperatureH=20,\n                temperatureW=20,\n                num_feats=128,\n                normalize=True),\n            loss_cls1=dict(\n                type='TaskAlignedFocalLoss',\n                use_sigmoid=True,\n                gamma=2.0,\n                loss_weight=2.0),\n            loss_cls2=dict(\n                type='FocalLoss',\n                use_sigmoid=True,\n                gamma=2.0,\n                alpha=0.25,\n                loss_weight=2.0),\n            loss_bbox=dict(type='L1Loss', loss_weight=5.0),\n            loss_iou=dict(type='GIoULoss', loss_weight=2.0)),\n        train_cfg=dict(\n            assigner1=dict(type='O2MAssigner'),\n            assigner2=dict(\n                type='HungarianAssigner',\n                cls_cost=dict(type='FocalLossCost', weight=2.0),\n                reg_cost=dict(\n                    type='BBoxL1Cost', weight=5.0, box_format='xywh'),\n                iou_cost=dict(type='IoUCost', iou_mode='giou', weight=2.0)),\n            warm_up_step=60000),\n        test_cfg=dict(max_per_img=300, warm_up_step=60000)),\n    train_cfg=dict(\n        use_teacher_proposal=False,\n        pseudo_label_initial_score_thr=0.4,\n        min_pseduo_box_size=0,\n        unsup_weight=4.0,\n        aug_query=False),\n    test_cfg=dict(inference_on='student'))\noptimizer = dict(\n    type='AdamW',\n    lr=0.0001,\n    weight_decay=0.0001,\n    paramwise_cfg=dict(\n        custom_keys=dict(backbone=dict(lr_mult=0.1, decay_mult=1.0))))\noptimizer_config = dict(grad_clip=dict(max_norm=0.1, norm_type=2))\nlr_config = dict(policy='step', step=[120000, 160000])\nrunner = dict(type='IterBasedRunner', max_iters=120000)\nstrong_pipeline = [\n    dict(\n        type='Sequential',\n        transforms=[\n            dict(\n                type='RandResize',\n                img_scale=[(480, 1333), (512, 1333), (544, 1333), (576, 1333),\n                           (608, 1333), (640, 1333), (672, 1333), (704, 1333),\n                           (736, 1333), (768, 1333), (800, 1333)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandFlip', flip_ratio=0.5),\n            dict(\n                type='ShuffledSequential',\n                transforms=[\n                    dict(\n                        type='OneOf',\n                        transforms=[\n                            dict(type='Identity'),\n                            dict(type='AutoContrast'),\n                            dict(type='RandEqualize'),\n                            dict(type='RandSolarize'),\n                            dict(type='RandColor'),\n                            dict(type='RandContrast'),\n                            dict(type='RandBrightness'),\n                            dict(type='RandSharpness'),\n                            dict(type='RandPosterize')\n                        ]),\n                    dict(\n                        type='OneOf',\n                        transforms=[{\n                            'type': 'RandTranslate',\n                            'x': (-0.1, 0.1)\n                        }, {\n                            'type': 'RandTranslate',\n                            'y': (-0.1, 0.1)\n                        }, {\n                            'type': 'RandRotate',\n                            'angle': (-30, 30)\n                        },\n                                    [{\n                                        'type': 'RandShear',\n                                        'x': (-30, 30)\n                                    }, {\n                                        'type': 'RandShear',\n                                        'y': (-30, 30)\n                                    }]])\n                ]),\n            dict(\n                type='RandErase',\n                n_iterations=(1, 5),\n                size=[0, 0.2],\n                squared=True)\n        ],\n        record=True),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=1),\n    dict(type='ExtraAttrs', tag='unsup_student'),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_bboxes', 'gt_labels'],\n        meta_keys=('filename', 'ori_shape', 'img_shape', 'img_norm_cfg',\n                   'pad_shape', 'scale_factor', 'tag', 'transform_matrix'))\n]\nweak_pipeline = [\n    dict(\n        type='Sequential',\n        transforms=[\n            dict(\n                type='RandResize',\n                img_scale=[(480, 1333), (512, 1333), (544, 1333), (576, 1333),\n                           (608, 1333), (640, 1333), (672, 1333), (704, 1333),\n                           (736, 1333), (768, 1333), (800, 1333)],\n                multiscale_mode='value',\n                keep_ratio=True),\n            dict(type='RandFlip', flip_ratio=0.5)\n        ],\n        record=True),\n    dict(\n        type='Normalize',\n        mean=[123.675, 116.28, 103.53],\n        std=[58.395, 57.12, 57.375],\n        to_rgb=True),\n    dict(type='Pad', size_divisor=1),\n    dict(type='ExtraAttrs', tag='unsup_teacher'),\n    dict(type='DefaultFormatBundle'),\n    dict(\n        type='Collect',\n        keys=['img', 'gt_bboxes', 'gt_labels'],\n        meta_keys=('filename', 'ori_shape', 'img_shape', 'img_norm_cfg',\n                   'pad_shape', 'scale_factor', 'tag', 'transform_matrix'))\n]\nunsup_pipeline = [\n    dict(type='LoadImageFromFile'),\n    dict(type='LoadAnnotations', with_bbox=True),\n    dict(\n        type='MultiBranch',\n        unsup_student=[\n            dict(\n                type='Sequential',\n                transforms=[\n                    dict(\n                        type='RandResize',\n                        img_scale=[(480, 1333), (512, 1333), (544, 1333),\n                                   (576, 1333), (608, 1333), (640, 1333),\n                                   (672, 1333), (704, 1333), (736, 1333),\n                                   (768, 1333), (800, 1333)],\n                        multiscale_mode='value',\n                        keep_ratio=True),\n                    dict(type='RandFlip', flip_ratio=0.5),\n                    dict(\n                        type='ShuffledSequential',\n                        transforms=[\n                            dict(\n                                type='OneOf',\n                                transforms=[\n                                    dict(type='Identity'),\n                                    dict(type='AutoContrast'),\n                                    dict(type='RandEqualize'),\n                                    dict(type='RandSolarize'),\n                                    dict(type='RandColor'),\n                                    dict(type='RandContrast'),\n                                    dict(type='RandBrightness'),\n                                    dict(type='RandSharpness'),\n                                    dict(type='RandPosterize')\n                                ]),\n                            dict(\n                                type='OneOf',\n                                transforms=[{\n                                    'type': 'RandTranslate',\n                                    'x': (-0.1, 0.1)\n                                }, {\n                                    'type': 'RandTranslate',\n                                    'y': (-0.1, 0.1)\n                                }, {\n                                    'type': 'RandRotate',\n                                    'angle': (-30, 30)\n                                },\n                                            [{\n                                                'type': 'RandShear',\n                                                'x': (-30, 30)\n                                            }, {\n                                                'type': 'RandShear',\n                                                'y': (-30, 30)\n                                            }]])\n                        ]),\n                    dict(\n                        type='RandErase',\n                        n_iterations=(1, 5),\n                        size=[0, 0.2],\n                        squared=True)\n                ],\n                record=True),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=1),\n            dict(type='ExtraAttrs', tag='unsup_student'),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels'],\n                meta_keys=('filename', 'ori_shape', 'img_shape',\n                           'img_norm_cfg', 'pad_shape', 'scale_factor', 'tag',\n                           'transform_matrix'))\n        ],\n        unsup_teacher=[\n            dict(\n                type='Sequential',\n                transforms=[\n                    dict(\n                        type='RandResize',\n                        img_scale=[(480, 1333), (512, 1333), (544, 1333),\n                                   (576, 1333), (608, 1333), (640, 1333),\n                                   (672, 1333), (704, 1333), (736, 1333),\n                                   (768, 1333), (800, 1333)],\n                        multiscale_mode='value',\n                        keep_ratio=True),\n                    dict(type='RandFlip', flip_ratio=0.5)\n                ],\n                record=True),\n            dict(\n                type='Normalize',\n                mean=[123.675, 116.28, 103.53],\n                std=[58.395, 57.12, 57.375],\n                to_rgb=True),\n            dict(type='Pad', size_divisor=1),\n            dict(type='ExtraAttrs', tag='unsup_teacher'),\n            dict(type='DefaultFormatBundle'),\n            dict(\n                type='Collect',\n                keys=['img', 'gt_bboxes', 'gt_labels'],\n                meta_keys=('filename', 'ori_shape', 'img_shape',\n                           'img_norm_cfg', 'pad_shape', 'scale_factor', 'tag',\n                           'transform_matrix'))\n        ])\n]\nfold = 1\npercent = 10\nwork_dir = 'work_dirs/detr_ssod_dino_detr_r50_coco_120k/10/1/'\ncfg_name = 'detr_ssod_dino_detr_r50_coco_120k'\ngpu_ids = range(0, 2)\n", "seed": null, "exp_name": "detr_ssod_dino_detr_r50_coco_120k.py"}
